{"version":3,"sources":["components/User.js","components/UserList.js","components/UserDetail.js","components/FilterByName.js","components/FilterByGender.js","components/FilterByCities.js","components/Filters.js","services/api.js","services/local-storage.js","components/App.js","index.js"],"names":["User","props","to","user","id","className","src","image","alt","name","title","city","gender","UserList","userElements","users","map","UserDetail","Example","useState","Date","startDate","setStartDate","selected","onChange","date","email","country","FilterByName","htmlFor","type","value","filterName","ev","handleFilter","target","key","FilterByGender","filterGender","FilterByCities","handleChange","cities","index","checked","filterCities","includes","Filters","getApiData","fetch","then","response","json","data","results","login","uuid","location","picture","large","first","last","objToExport","get","defaultData","localStorage","getItem","JSON","parse","set","setItem","stringify","App","ls","setUsers","setFilterName","setFilterGender","setFilterCities","useEffect","length","usersData","filteredUsers","filter","toLowerCase","exact","path","userCities","Set","getCities","newFilterCities","push","render","routeUserId","match","params","userId","foundUser","find","undefined","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.29094123.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst User = (props) => {\n  const getGender = () => {\n    if (props.user.gender === \"female\") {\n      return \"Female\";\n    } else if (props.user.gender === \"male\") {\n      return \"Male\";\n    } else {\n      return \"No binario\";\n    }\n  };\n\n  return (\n    <Link to={`/user/${props.user.id}`}>\n      <article className=\"card\">\n        <img\n          className=\"card__img\"\n          src={props.user.image}\n          alt={`Photo ${props.user.name}`}\n          title={`Photo ${props.user.name}`}\n        />\n        <h4 className=\"card__title\">{props.user.name}</h4>\n        <p className=\"card__description\">\n          {props.user.city} / {getGender()}\n        </p>\n      </article>\n    </Link>\n  );\n};\n\nexport default User;\n","import React from \"react\";\nimport User from \"./User\";\n\nconst UserList = (props) => {\n  const userElements = props.users.map((user) => {\n    return (\n      <li key={user.id}>\n        <User user={user} />\n      </li>\n    );\n  });\n\n  return (\n    <section>\n      <ul className=\"cards\">{userElements}</ul>\n    </section>\n  );\n};\n\nexport default UserList;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst UserDetail = (props) => {\n  const Example = () => {\n    const [startDate, setStartDate] = useState(new Date());\n    return (\n      <DatePicker\n        selected={startDate}\n        onChange={(date) => setStartDate(date)}\n      />\n    );\n  };\n\n  return (\n    <div className=\"card\">\n      <Link to=\"/\">Home</Link>\n      <header>\n        <h2>{props.user.name}</h2>\n      </header>\n      <section>\n        <img\n          className=\"card__img\"\n          src={props.user.image}\n          alt={props.user.name}\n        />\n        <h4 className=\"card__title\">{props.user.name}</h4>\n        <ul className=\"ml-1 mt-1\">\n          <li>Gender: {props.user.gender}</li>\n          <li>Email: {props.user.email}</li>\n          <li>City: {props.user.city}</li>\n          <li>Country: {props.user.country}</li>\n        </ul>\n        <Example />\n      </section>\n    </div>\n  );\n};\n\nexport default UserDetail;\n","import React from \"react\";\n\nconst FilterByName = (props) => {\n  const handleChange = (ev) => {\n    props.handleFilter({\n      value: ev.target.value,\n      key: \"name\",\n    });\n  };\n  return (\n    <>\n      <label className=\"form__label display-block\" htmlFor=\"name\">\n        Name:\n      </label>\n      <input\n        className=\"form__input-text\"\n        type=\"text\"\n        name=\"name\"\n        id=\"name\"\n        value={props.filterName}\n        onChange={handleChange}\n      />\n    </>\n  );\n};\n\nexport default FilterByName;\n","import React from \"react\";\n\nconst FilterByGender = (props) => {\n  const handleChange = (ev) => {\n    props.handleFilter({\n      value: ev.target.value,\n      key: \"gender\",\n    });\n  };\n  return (\n    <>\n      <label className=\"form__label display-block\" htmlFor=\"gender\">\n        Gender:\n      </label>\n\n      <select\n        className=\"form__input-text\"\n        name=\"gender\"\n        id=\"gender\"\n        value={props.filterGender}\n        onChange={handleChange}\n      >\n        <option value=\"\">All</option>\n        <option value=\"female\">Female</option>\n        <option value=\"male\">Male</option>\n        <option value=\"no-binary\">No-binary</option>\n      </select>\n    </>\n  );\n};\n\nexport default FilterByGender;\n","import React from \"react\";\nimport \"../stylesheets/form-cities.scss\";\n\nconst FilterByCities = (props) => {\n  const handleChange = (ev) => {\n    props.handleFilter({\n      value: ev.target.value,\n      key: \"city\",\n    });\n  };\n\n  const renderCities = () => {\n    return props.cities.map((city, index) => {\n      return (\n        <li key={index}>\n          <label>\n            <input\n              className=\"input\"\n              type=\"checkbox\"\n              name=\"city\"\n              value={city}\n              checked={props.filterCities.includes(city)}\n              onChange={handleChange}\n            />\n            {city}\n          </label>\n        </li>\n      );\n    });\n  };\n\n  return (\n    <>\n      <label className=\"form__label display-block\" htmlFor=\"city\">\n        City:\n      </label>\n      <ul className=\"filterCities\">{renderCities()}</ul>\n    </>\n  );\n};\n\nexport default FilterByCities;\n","import React from \"react\";\nimport FilterByName from \"./FilterByName\";\nimport FilterByGender from \"./FilterByGender\";\nimport FilterByCities from \"./FilterByCities\";\n\nconst Filters = (props) => {\n  return (\n    <section>\n      <form className=\"form\">\n        <FilterByName\n          filterName={props.filterName}\n          handleFilter={props.handleFilter}\n        />\n        <FilterByGender\n          filterGender={props.filterGender}\n          handleFilter={props.handleFilter}\n        />\n        <FilterByCities\n          filterCities={props.filterCities}\n          cities={props.cities}\n          handleFilter={props.handleFilter}\n        />\n      </form>\n    </section>\n  );\n};\n\nexport default Filters;\n","const getApiData = () => {\n  return fetch(\"https://randomuser.me/api/?results=50\")\n    .then((response) => response.json())\n    .then((data) => {\n      const cleanData = data.results.map((user) => {\n        return {\n          id: user.login.uuid,\n          gender: user.gender,\n          email: user.email,\n          city: user.location.city,\n          country: user.location.country,\n          image: user.picture.large,\n          name: `${user.name.first} ${user.name.last}`,\n        };\n      });\n      return cleanData;\n    });\n};\n\nexport default getApiData;\n","const get = (key, defaultData) => {\n  const data = localStorage.getItem(key);\n  if (data === null) {\n    return defaultData;\n  } else {\n    return JSON.parse(data);\n  }\n};\n\nconst set = (key, value) => {\n  localStorage.setItem(key, JSON.stringify(value));\n};\n\nconst objToExport = {\n  get: get,\n  set: set\n};\n\nexport default objToExport;\n","import React, { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport UserList from \"./UserList\";\nimport UserDetail from \"./UserDetail\";\nimport Filters from \"./Filters\";\nimport getApiData from \"../services/api\";\nimport ls from \"../services/local-storage\";\nimport \"../stylesheets/app.scss\";\n\nconst App = () => {\n  const [users, setUsers] = useState(ls.get(\"users\", []));\n  const [filterName, setFilterName] = useState(ls.get(\"filterName\", \"\"));\n  const [filterGender, setFilterGender] = useState(ls.get(\"filterGender\", \"\"));\n  const [filterCities, setFilterCities] = useState(ls.get(\"filterCities\", []));\n\n  useEffect(() => {\n    if (users.length === 0) {\n      getApiData().then((usersData) => {\n        setUsers(usersData);\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    ls.set(\"users\", users);\n  }, [users]);\n\n  useEffect(() => {\n    ls.set(\"users\", users);\n    ls.set(\"filterName\", filterName);\n    ls.set(\"filterGender\", filterGender);\n    ls.set(\"filterCities\", filterCities);\n  }, [users, filterName, filterGender, filterCities]);\n\n  const handleFilter = (data) => {\n    if (data.key === \"name\") {\n      setFilterName(data.value);\n    } else if (data.key === \"gender\") {\n      setFilterGender(data.value);\n    } else if (data.key === \"city\") {\n      if (filterCities.includes(data.value)) {\n        const newFilterCities = filterCities.filter(\n          (city) => city !== data.value\n        );\n        setFilterCities(newFilterCities);\n      } else {\n        filterCities.push(data.value);\n        setFilterCities([...filterCities]);\n      }\n    }\n  };\n\n  const filteredUsers = users\n    .filter((user) => {\n      return user.name.toLowerCase().includes(filterName.toLowerCase());\n    })\n    .filter((user) => {\n      if (filterGender === \"\") {\n        return true;\n      } else {\n        return user.gender === filterGender;\n      }\n    })\n    .filter((user) => {\n      if (filterCities.length === 0) {\n        return true;\n      } else {\n        return filterCities.includes(user.city);\n      }\n    });\n\n  const renderUserDetail = (props) => {\n    const routeUserId = props.match.params.userId;\n    const foundUser = users.find((user) => {\n      return user.id === routeUserId;\n    });\n\n    if (foundUser !== undefined) {\n      return <UserDetail user={foundUser} />;\n    } else {\n      return <p>User not found</p>;\n    }\n  };\n\n  const getCities = () => {\n    const userCities = users.map((user) => user.city);\n    let uniqueCities = [...new Set(userCities)];\n    return uniqueCities;\n  };\n\n  return (\n    <>\n      <div className=\"page\">\n        <h1 className=\"title--big\">Find a Surgeon</h1>\n        <Switch>\n          <Route exact path=\"/\">\n            <div className=\"col2\">\n              <Filters\n                filterName={filterName}\n                filterGender={filterGender}\n                filterCities={filterCities}\n                cities={getCities()}\n                handleFilter={handleFilter}\n              />\n              <UserList users={filteredUsers} />\n            </div>\n          </Route>\n          <Route path=\"/user/:userId\" render={renderUserDetail} />\n        </Switch>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './components/App';\nimport './stylesheets/index.scss';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}